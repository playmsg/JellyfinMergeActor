name: PyInstaller
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        #os: [windows-latest, macos-latest, ubuntu-latest]
        os: [windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
      # pyside6的代码里有一部分似乎对python 3.8不太友好。另外是自己安装python还是用actions安装python……其实我不太清楚有什么区别
      - name: Setup Python
        uses: actions/setup-python@v2.3.1
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          # python -m pip install --upgrade pip
          # pip install -r requirements.txt 不知为何，pyside6用requirements.txt安装就不成功，直接用pip install能成功。
          pip install pyside6
          pip install pyinstaller

      - name: Build with PyInstaller for macos/ubuntu
        #if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
        # pyinstaller在linux下打包qt for python 6有问题，打包出来的文件不能执行。用cx_freeze可以打包，不过不能生成单一文件（其实生成的单一文件有时候反病毒会报警）
        # macos的还没测试过，按理说qt应该也有问题
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller -F -w jellyfinstar.py
          
      - name: Build with PyInstaller for windows
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller -F -w jellyfinstar.py
      - name: Copy gflist.txt
        run: |
          cp gflist.txt dist/
      - name: Upload build artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: JellyfinMergeActor-${{ runner.os }}-amd64
          path: dist
